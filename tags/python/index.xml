<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Python - 标签 - 二叉树的博客</title>
        <link>http://www.spiritysdx.top/tags/python/</link>
        <description>Python - 标签 - 二叉树的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 10 Sep 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://www.spiritysdx.top/tags/python/" rel="self" type="application/rss+xml" /><item>
    <title>图神经网络基础</title>
    <link>http://www.spiritysdx.top/20230910/</link>
    <pubDate>Sun, 10 Sep 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20230910/</guid>
    <description><![CDATA[<h2 id="传统机器学习">传统机器学习</h2>
<p>默认二者独立同分布，只需要拟合决策边界分类或拟合回归的曲线即可。</p>
<h2 id="现代神经网络">现代神经网络</h2>
<p>斯坦福CS的相关课程：</p>
<table>
  <thead>
      <tr>
          <th>网络类型</th>
          <th>数据类型</th>
          <th>课程</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>全连接神经网络</td>
          <td>表格</td>
          <td>无</td>
      </tr>
      <tr>
          <td>卷积神经网络</td>
          <td>图像</td>
          <td>CS231N</td>
      </tr>
      <tr>
          <td>循环神经网络、Transformer</td>
          <td>文本语音带序列</td>
          <td>CS224N</td>
      </tr>
      <tr>
          <td>图神经网络</td>
          <td>图数据</td>
          <td>CS244W</td>
      </tr>
  </tbody>
</table>
<h2 id="复杂的图结构">复杂的图结构</h2>
<ol>
<li>任意尺寸输入</li>
<li>没有固定的节点顺序和参考锚点</li>
<li>动态变化，多模态特征</li>
</ol>
<h2 id="表示学习---图嵌入---node-embedding">表示学习 - 图嵌入 - node embedding</h2>
<p>把一个复杂的图节点表示为一个d维向量，能充分表示原始数据的语义。</p>]]></description>
</item><item>
    <title>Python相关的深度学习的学习路径</title>
    <link>http://www.spiritysdx.top/20230909/</link>
    <pubDate>Sat, 09 Sep 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20230909/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p>所有资源均免费，遇到付费推荐勿要付费</p>
<p>方向是 图神经网络 和 强化学习 的学习路径</p>
<h2 id="基础知识">基础知识</h2>
<p>白月黑羽的网站：</p>
<p><a href="https://www.byhy.net/" target="_blank" rel="noopener noreffer">https://www.byhy.net/</a></p>
<p>适合学习Python基础知识，有对应的B站讲解视频</p>
<p>他的自动化方面课程讲的也很好，爬虫中的selenium，以及Python的自动化测试，都算是他很好的课程了。(属于题外话了，这些东西在深度学习中用不到，没时间的别浪费时间看)</p>]]></description>
</item><item>
    <title>Actor-Critic Methods</title>
    <link>http://www.spiritysdx.top/20230908/</link>
    <pubDate>Fri, 08 Sep 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20230908/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p></p>
<p>Actor-Critic Methods 结合了价值学习和策略学习，同时训练了两个神经网络。</p>
<p>Actor 网络用于产生策略，Critic 网络用于评估策略。</p>
<p></p>
<h2 id="目标">目标</h2>
<p>① 更新策略网络Π的参数，是为了增大状态价值V的值，要用价值网络q进行打分来训练。</p>]]></description>
</item><item>
    <title>Policy-Based learning</title>
    <link>http://www.spiritysdx.top/20230907/</link>
    <pubDate>Thu, 07 Sep 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20230907/</guid>
    <description><![CDATA[<h2 id="用策略函数指导动作">用策略函数指导动作</h2>
<p>使用策略函数随机抽样得到动作。</p>
<h2 id="近似策略函数">近似策略函数</h2>
<p>由于实际的策略函数无法得到，需要用各种方式去近似策略函数，所以这里可以使用神经网络去近似实际的策略函数，记作<code>policy network</code>。</p>]]></description>
</item><item>
    <title>Deep Q-Network (DQN) (Value-Based learning)</title>
    <link>http://www.spiritysdx.top/20230906/</link>
    <pubDate>Wed, 06 Sep 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20230906/</guid>
    <description><![CDATA[<h2 id="寻找最佳的q值函数">寻找最佳的Q值函数</h2>
<p>实际并不知道最佳的Q值函数，需要使用神经网络 Q(s,a;w) 来近似最佳的Q值函数。</p>
<p>实际流程大致为当前状态转换为矩阵后，通过卷积层提取特征向量，再通过全连接层得到Q值向量，此时的Q值向量每一个元素代表某一个动作的得分。</p>]]></description>
</item><item>
    <title>强化学习术语翻译</title>
    <link>http://www.spiritysdx.top/20230905/</link>
    <pubDate>Tue, 05 Sep 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20230905/</guid>
    <description><![CDATA[<h2 id="state">State</h2>
<p>状态，即状态空间，表示环境中的当前状态。</p>
<h2 id="action--agent">Action &amp;&amp; Agent</h2>
<p>动作，即动作空间，表示在当前状态下，执行的动作。</p>
<p>动作由谁做的就是<code>Agent</code>，即智能体。</p>
<h2 id="policy-π">Policy Π</h2>
<p>策略，即策略空间，表示在当前状态下，智能体可以采取的动作。</p>]]></description>
</item><item>
    <title>高效探索学习解决组合图分区问题(基于强化学习的优化算法)</title>
    <link>http://www.spiritysdx.top/20230823/</link>
    <pubDate>Wed, 23 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20230823/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p>老板下指示复现两篇文章，这是其中一篇</p>
<p><a href="https://arxiv.org/pdf/2205.14105v1.pdf" target="_blank" rel="noopener noreffer">https://arxiv.org/pdf/2205.14105v1.pdf</a></p>
<p>文章的原理什么的已经大部分明白了但仍然有部分懂，故而做下记录，以备后续复现或深入了解</p>
<h2 id="原始数据">原始数据</h2>
<h3 id="er40ba40到er500ba500">ER40/BA40到ER500/BA500</h3>
<p><a href="https://ojs.aaai.org/index.php/AAAI/article/download/5723/5579" target="_blank" rel="noopener noreffer">https://ojs.aaai.org/index.php/AAAI/article/download/5723/5579</a></p>
<p><a href="https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.74.47" target="_blank" rel="noopener noreffer">https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.74.47</a></p>
<p>分别命名为ER和BA数据集</p>]]></description>
</item><item>
    <title>Python加速科学运算的一些小技巧</title>
    <link>http://www.spiritysdx.top/20230812/</link>
    <pubDate>Sat, 12 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20230812/</guid>
    <description><![CDATA[<h2 id="原地操作">原地操作</h2>
<p>使用</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">a</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="n">b</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="n">a</span> <span class="o">+=</span> <span class="n">b</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="c1"># 结果是2</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>而不是使用</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>好处是内存不会复制扩展，只使用a和b的内存运算</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
</span></span><span class="line"><span class="cl"><span class="n">X</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">Y</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">]])</span>
</span></span><span class="line"><span class="cl"><span class="n">np</span><span class="o">.</span><span class="n">concatenate</span><span class="p">([</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span> <span class="n">np</span><span class="o">.</span><span class="n">concatenate</span><span class="p">([</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>检测内存是否一致，在下面的例子中，用Python的id()函数演示了这一点， 它提供了内存中引用对象的确切地址。 运行<code>Y = Y + X</code>后，会发现id(Y)指向另一个位置。 这是因为Python首先计算Y + X，为结果分配新的内存，然后使Y指向内存中的这个新位置。</p>]]></description>
</item><item>
    <title>通过GCN生成概率图引导树搜索解决图的组合优化问题</title>
    <link>http://www.spiritysdx.top/20230808/</link>
    <pubDate>Tue, 08 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20230808/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p>老板下指示复现两篇文章，这是其中一篇</p>
<p><a href="https://arxiv.org/pdf/1810.10659.pdf" target="_blank" rel="noopener noreffer">https://arxiv.org/pdf/1810.10659.pdf</a></p>
<p>文章的原理什么的已经大致明白了但仍然有小部分不懂，故而做下记录，以备后续复现或深入了解</p>
<h2 id="原始数据">原始数据</h2>
<h3 id="training-data">Training Data</h3>
<p><a href="https://www.cs.ubc.ca/~hoos/SATLIB/benchm.html" target="_blank" rel="noopener noreffer">https://www.cs.ubc.ca/~hoos/SATLIB/benchm.html</a></p>
<h3 id="testing-data">Testing Data</h3>
<h4 id="sat-competition-2017">SAT Competition 2017</h4>
<p><a href="https://helda.helsinki.fi/bitstream/handle/10138/224324/sc2017-proceedings.pdf" target="_blank" rel="noopener noreffer">https://helda.helsinki.fi/bitstream/handle/10138/224324/sc2017-proceedings.pdf</a></p>]]></description>
</item><item>
    <title>深度学习环境安装(李沐老师相关)</title>
    <link>http://www.spiritysdx.top/20230727/</link>
    <pubDate>Thu, 27 Jul 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20230727/</guid>
    <description><![CDATA[<p>由于之前有写过一键安装jupyter的shell脚本，所以这里只需要找一个服务器就够了</p>
<p><a href="https://github.com/spiritLHLS/one-click-installation-script#%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85jupyter%E7%8E%AF%E5%A2%83" target="_blank" rel="noopener noreffer">https://github.com/spiritLHLS/one-click-installation-script#%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85jupyter%E7%8E%AF%E5%A2%83</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl -L https://raw.githubusercontent.com/spiritLHLS/one-click-installation-script/main/install_scripts/jupyter.sh -o jupyter.sh <span class="o">&amp;&amp;</span> chmod +x jupyter.sh <span class="o">&amp;&amp;</span> bash jupyter.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>又由于之前玩Linux积攒了很多机器，找了一台<a href="https://curl.qcloud.com/MNyiQAB1" target="_blank" rel="noopener noreffer">腾讯云</a>广州的4C3C80G和<a href="https://hosting.skrime.eu/a/server" target="_blank" rel="noopener noreffer">OVH</a>法国的4C2C25G的机器测试了一下</p>]]></description>
</item></channel>
</rss>
