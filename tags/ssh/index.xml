<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Ssh - 标签 - 二叉树的博客</title>
        <link>http://www.spiritysdx.top/tags/ssh/</link>
        <description>Ssh - 标签 - 二叉树的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 13 Jul 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://www.spiritysdx.top/tags/ssh/" rel="self" type="application/rss+xml" /><item>
    <title>机房本地服务器自建Gitea并使用</title>
    <link>http://www.spiritysdx.top/20240713/</link>
    <pubDate>Sat, 13 Jul 2024 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20240713/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p>由于Github在国内访问速度较慢，所以选择在本地服务器上自建Gitea，使用国内服务器内穿端口后访问速度较快，并且可以自己管理代码，更安全。</p>]]></description>
</item><item>
    <title>给机房的LXD容器配置跳板机进行连接</title>
    <link>http://www.spiritysdx.top/20240515/</link>
    <pubDate>Tue, 14 May 2024 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20240515/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p>由于机房的服务器(下称宿主机)都是没有公网IP的(只有NAT的IPV4网络)，所以需要通过跳板机进行连接。</p>
<p>由于Pycharm的远程连接是通过SSH进行连接的，使用SFTP协议，所以仅使用22端口即可。</p>]]></description>
</item><item>
    <title>在Pycharm上连接远程虚拟环境进行使用</title>
    <link>http://www.spiritysdx.top/20240514/</link>
    <pubDate>Tue, 14 May 2024 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20240514/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p>相信通过前面教程，大部分问题都解决了，目前就剩一个Pycharm怎么连接远程的LXC容器运行Python项目的问题了。</p>
<p>(为什么不用VSCODE？因为它没有官方支持的远程开发/SSH开发的功能，只有相关的第三方插件实现了类似的功能但并不好用，所以我选择了Pycharm)</p>]]></description>
</item><item>
    <title>给机房的Ubuntu22.04的Linux安装SSH的server</title>
    <link>http://www.spiritysdx.top/20240511/</link>
    <pubDate>Sat, 11 May 2024 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20240511/</guid>
    <description><![CDATA[<h2 id="废话少说">废话少说</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sed -i &#39;s/.*precedence ::ffff:0:0\/96.*/precedence ::ffff:0:0\/96  100/g&#39; /etc/gai.conf
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">apt update
</span></span><span class="line"><span class="cl">apt install openssh-server -y
</span></span><span class="line"><span class="cl">systemctl enable --now ssh
</span></span><span class="line"><span class="cl">systemctl status ssh
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">    sed -i &#39;s/^#\?Port.*/Port 22/g&#39; /etc/ssh/sshd_config
</span></span><span class="line"><span class="cl">    sed -i &#39;s/^#\?PermitRootLogin.*/PermitRootLogin yes/g&#39; /etc/ssh/sshd_config
</span></span><span class="line"><span class="cl">    sed -i &#39;s/^#\?PasswordAuthentication.*/PasswordAuthentication yes/g&#39; /etc/ssh/sshd_config
</span></span><span class="line"><span class="cl">    sed -i &#39;s/#ListenAddress 0.0.0.0/ListenAddress 0.0.0.0/&#39; /etc/ssh/sshd_config
</span></span><span class="line"><span class="cl">    sed -i &#39;s/#ListenAddress ::/ListenAddress ::/&#39; /etc/ssh/sshd_config
</span></span><span class="line"><span class="cl">    sed -i &#39;s/#AddressFamily any/AddressFamily any/&#39; /etc/ssh/sshd_config
</span></span><span class="line"><span class="cl">    sed -i &#39;/^#UsePAM\|UsePAM/c #UsePAM no&#39; /etc/ssh/sshd_config
</span></span><span class="line"><span class="cl">    sed -i &#39;s/^#\?PubkeyAuthentication.*/PubkeyAuthentication no/g&#39; /etc/ssh/sshd_config
</span></span><span class="line"><span class="cl">    sed -i &#39;/^AuthorizedKeysFile/s/^/#/&#39; /etc/ssh/sshd_config
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">systemctl restart sshd
</span></span><span class="line"><span class="cl">systemctl restart ssh
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果还是不行，使用</p>]]></description>
</item></channel>
</rss>
