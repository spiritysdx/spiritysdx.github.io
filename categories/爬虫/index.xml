<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>爬虫 - 分类 - 二叉树的博客</title>
        <link>http://www.spiritysdx.top/categories/%E7%88%AC%E8%99%AB/</link>
        <description>爬虫 - 分类 - 二叉树的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 10 Dec 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://www.spiritysdx.top/categories/%E7%88%AC%E8%99%AB/" rel="self" type="application/rss+xml" /><item>
    <title>在seleniumwire中解决Not Secure问题</title>
    <link>http://www.spiritysdx.top/20221212/</link>
    <pubDate>Sat, 10 Dec 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20221212/</guid>
    <description><![CDATA[<h3 id="解决上一篇文章的一些问题">解决上一篇文章的一些问题</h3>
<p>解决方法：</p>
<p><a href="https://github.com/wkeeling/selenium-wire/issues/622" target="_blank" rel="noopener noreffer">https://github.com/wkeeling/selenium-wire/issues/622</a></p>
<p>下载证书</p>
<p><a href="https://github.com/wkeeling/selenium-wire/raw/master/seleniumwire/ca.crt" target="_blank" rel="noopener noreffer">https://github.com/wkeeling/selenium-wire/raw/master/seleniumwire/ca.crt</a></p>
<p>将该 ca.crt 添加到受信任的证书中</p>
<p>google浏览器打开<code>chrome://settings/security</code></p>
<p>点击管理证书，选择<code>受信任的的根证书颁发机构</code>分区，选择导入</p>]]></description>
</item><item>
    <title>Selenium的web自动化操作02(基本语法)</title>
    <link>http://www.spiritysdx.top/20200516/</link>
    <pubDate>Fri, 09 Dec 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20200516/</guid>
    <description><![CDATA[<h2 id="前言"><strong>前言</strong></h2>
<p>需要下载Chrome或Firefox的driver，Chrome内核81.440与Firefox内核74.0下载链接如下：</p>
<p><a href="https://spiritlhl.lanzous.com/icg1k3c" target="_blank" rel="noopener noreffer">Firefox</a></p>
<p><a href="https://spiritlhl.lanzous.com/icg1k0j" target="_blank" rel="noopener noreffer">Chrome</a></p>
<p>其他版本请在搜索引擎查找，本篇使用该版本，注意，driver下载后需要配置对应内核的游览器，电脑本身需要有该内核的游览器。</p>]]></description>
</item><item>
    <title>解决selenium爬虫加密代理问题(含socks5等一切代理)</title>
    <link>http://www.spiritysdx.top/20221211/</link>
    <pubDate>Fri, 09 Dec 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20221211/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p>爬虫过程中出现了cloudflare的高风险质询验证阻拦或者recaptcha的阻拦，想要破除验证要么使用干净的代理保证低风险爬虫，要么使用hcaptcha求解器求解，后者需要部署的东西过于复杂，为了提高效率，本文介绍第一种方法破除质询验证</p>]]></description>
</item><item>
    <title>免费破解图片验证码(数字或中英混合)(附代码)(2022)</title>
    <link>http://www.spiritysdx.top/20221103/</link>
    <pubDate>Thu, 03 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20221103/</guid>
    <description><![CDATA[<h1 id="前言">前言</h1>
<p>前面有破解谷歌验证码，现在来破解相对简单的图片验证码。(数字以及中英混合)</p>
<h2 id="插件过验证码">插件过验证码</h2>
<p>需要加载谷歌插件<a href="https://github.com/spiritLHL/Driver_sign/blob/master/AutoVerify.crx" target="_blank" rel="noopener noreffer">AutoVerify</a></p>
<p>这种识别是为了过简单的文字+数字的验证图片用的方法。</p>]]></description>
</item><item>
    <title>Python破解Google验证码ReCaptchav3的成功案例(附代码)(免费)(2022)</title>
    <link>http://www.spiritysdx.top/20221102/</link>
    <pubDate>Wed, 02 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20221102/</guid>
    <description><![CDATA[<h1 id="前言">前言</h1>
<p>破解谷歌验证码，其实并不需要用高深的法子，只需要借助一些免费资源，免费插件，就能达到很好的效果。</p>
<p>网上现在流传的几乎都说Google验证码ReCaptchav3得用深度学习，或者第三方收费打码网站，又或者抓住某些验证漏洞才能过，实际上，并不需要。这里我先从普通的验证码开始，介绍我破解Google验证码的思路以及个人成功案例。(全网独家，目前我各大搜索引擎找遍了都没有的，如需转发请注明本文来源)</p>]]></description>
</item><item>
    <title>图片验证码增强技术(提高识别正确率)</title>
    <link>http://www.spiritysdx.top/20220206/</link>
    <pubDate>Sun, 06 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20220206/</guid>
    <description><![CDATA[<h3 id="直接使用原始图片做验证码识别正确率较低使用增强技术后能大大提高识别率">直接使用原始图片做验证码识别正确率较低，使用增强技术后能大大提高识别率</h3>
<p>黑底填充白底</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">Convert</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">    将图像中白色像素转变为黑色像素
</span></span></span><span class="line"><span class="cl"><span class="s2">    &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">img</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">getcwd</span><span class="p">()</span><span class="o">+</span> <span class="s2">&#34;</span><span class="se">\\</span><span class="s2">&#34;</span><span class="o">+</span> <span class="n">filename</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">img</span> <span class="o">=</span> <span class="n">img</span><span class="o">.</span><span class="n">convert</span><span class="p">(</span><span class="s2">&#34;RGBA&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">pixdata</span> <span class="o">=</span> <span class="n">img</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">img</span><span class="o">.</span><span class="n">size</span><span class="p">[</span><span class="mi">1</span><span class="p">]):</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">img</span><span class="o">.</span><span class="n">size</span><span class="p">[</span><span class="mi">0</span><span class="p">]):</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="nb">all</span><span class="p">(</span><span class="n">pixdata</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">220</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">4</span><span class="p">)):</span>
</span></span><span class="line"><span class="cl">                <span class="n">pixdata</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">os</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s2">&#34;result.png&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># result.png 黑色填充白底彩色图</span>
</span></span><span class="line"><span class="cl">    <span class="n">img</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="s2">&#34;result.png&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Successfully: &#34;</span> <span class="o">+</span> <span class="n">filename</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># origin.png 彩色验证码图片</span>
</span></span><span class="line"><span class="cl">    <span class="n">Convert</span><span class="p">(</span><span class="sa">r</span><span class="s2">&#34;origin.png&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>彩色变黑白二值化增强</p>]]></description>
</item><item>
    <title>创建新线程(通用)</title>
    <link>http://www.spiritysdx.top/20200831/</link>
    <pubDate>Mon, 31 Aug 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20200831/</guid>
    <description><![CDATA[<h3 id="创建并使用多线程">创建并使用多线程</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;主线程执行代码&#39;</span><span class="p">)</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 从 threading 库中导入Thread类</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">threading</span> <span class="kn">import</span> <span class="n">Thread</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">time</span> <span class="kn">import</span> <span class="n">sleep</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 定义一个函数，作为新线程执行的入口函数</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">threadFunc</span><span class="p">(</span><span class="n">arg1</span><span class="p">,</span><span class="n">arg2</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;子线程 开始&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;线程函数参数是：</span><span class="si">{</span><span class="n">arg1</span><span class="si">}</span><span class="s1">, </span><span class="si">{</span><span class="n">arg2</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">sleep</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;子线程 结束&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 创建 Thread 类的实例对象， 并且指定新线程的入口函数，此时并没有执行</span>
</span></span><span class="line"><span class="cl"><span class="n">thread</span> <span class="o">=</span> <span class="n">Thread</span><span class="p">(</span><span class="n">target</span><span class="o">=</span><span class="n">threadFunc</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="n">args</span><span class="o">=</span><span class="p">(</span><span class="s1">&#39;参数1&#39;</span><span class="p">,</span> <span class="s1">&#39;参数2&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#target=threadFunc对应执行的函数threadFunc</span>
</span></span><span class="line"><span class="cl"><span class="c1">#args=(&#39;参数1&#39;, &#39;参数2&#39;)这样新进程添加参数</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 执行start 方法，就会创建新线程，</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 并且新线程会去执行入口函数里面的代码。</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 这时候这个进程有两个线程了。↓</span>
</span></span><span class="line"><span class="cl"><span class="n">thread</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 主线程的代码执行 子线程对象的join方法，</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 就会等待子线程结束，才继续执行下面的代码</span>
</span></span><span class="line"><span class="cl"><span class="n">thread</span><span class="o">.</span><span class="n">join</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;主线程结束&#39;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>运行该程序，解释器执行到下面代码时</p>]]></description>
</item><item>
    <title>Appium自动化操作03(界面操作和adb命令)</title>
    <link>http://www.spiritysdx.top/20200525/</link>
    <pubDate>Mon, 25 May 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20200525/</guid>
    <description><![CDATA[<h1 id="前言">前言</h1>
<p>最好有<code>Selenium</code>的Web自动化的实际经验</p>
<p>运行基础：client库(0.52版本)，Appium Server，安卓SDK(含JDK环境)，USB调试模式下的手机(开发者模式)</p>]]></description>
</item><item>
    <title>Appium自动化操作02(元素定位及查看工具)</title>
    <link>http://www.spiritysdx.top/20200527/</link>
    <pubDate>Sun, 24 May 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20200527/</guid>
    <description><![CDATA[<h1 id="前言">前言</h1>
<p>最好有<code>Selenium</code>的Web自动化的实际经验</p>
<p>运行基础：client库(0.52版本)，Appium Server，安卓SDK(含JDK环境)，USB调试模式下的手机(开发者模式)</p>]]></description>
</item><item>
    <title>Appium自动化操作01(环境安装与初始结构)</title>
    <link>http://www.spiritysdx.top/20200523/</link>
    <pubDate>Sat, 23 May 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://www.spiritysdx.top/20200523/</guid>
    <description><![CDATA[<h1 id="前言">前言</h1>
<p>最好有<code>Selenium</code>的Web自动化的实际经验</p>
<p>本篇用到的相关软件链接：</p>
<p>链接: <a href="https://pan.baidu.com/s/126x-AgLKvM7qSJqdOzAAHA" target="_blank" rel="noopener noreffer">https://pan.baidu.com/s/126x-AgLKvM7qSJqdOzAAHA</a></p>
<p>提取码: h9b2</p>
<hr>
<h1 id="appium-基础知识">Appium 基础知识</h1>
<p><strong>Appium 用途和特点</strong></p>
<p>Appium 是一个移动 App （手机应用）自动化工具。</p>]]></description>
</item></channel>
</rss>
